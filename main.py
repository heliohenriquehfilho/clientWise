import streamlit as st
from supabase import create_client, Client
from dotenv import load_dotenv
import os

st.set_page_config(
    page_title="ClientWise",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="collapsed"  # Define o menu lateral como recolhido por padr√£o
)

load_dotenv()

# Inicializar o estado de autentica√ß√£o (antes de qualquer outra coisa)
if "autenticado" not in st.session_state:
    st.session_state.autenticado = False
if "user_id" not in st.session_state:
    st.session_state.user_id = None

from gerenciamento_financeiro import renderizar_gerenciamento_financeiro
from gerenciador_de_investimento import renderizar_gerenciamento_de_investimento
from gerenciador_vendas import renderizar_gerenciador_de_vendas

# Configura√ß√£o do Supabase
url = os.getenv("SUPABASE_URL")
key = os.getenv("SUPABASE_KEY")

if not url or not key:
    raise ValueError("Vari√°veis de ambiente SUPABASE_URL e SUPABASE_KEY n√£o configuradas.")

try:
    supabase: Client = create_client(url, key)
    print("Conex√£o com Supabase bem-sucedida!")
except Exception as e:
    print(f"Erro ao criar cliente Supabase: {e}")
    raise

st.title("ClientWise v0.0.3 üöÄ")

with st.expander("üì¢ Novidades da vers√£o 0.0.3"):
    st.markdown("""
    ### üÜï Novidades e Melhorias
    - **Novas formas de produto:** Agora √© poss√≠vel cadastrar produtos como **Digital** ou **F√≠sico**.
    - **Corre√ß√µes de bugs:** Melhoramos a estabilidade do sistema.
    - **Visualiza√ß√£o aprimorada:** Tabelas mais limpas no insight de vendas para facilitar a an√°lise.
    - **Menu Otimizado:** Navega√ß√£o do menu mais simples e intuitiva.
    """)

st.divider()  # Adiciona uma linha divis√≥ria para separa√ß√£o visual

# Fun√ß√£o para criar bot√µes com √≠cones e nomes
def menu_button(label, icon, key):
    return st.button(
        f"{icon} {label}", key=key, help=f"Navegar para {label}",
        use_container_width=True  # Faz os bot√µes ocuparem toda a largura dispon√≠vel
    )

# Fun√ß√£o para registrar usu√°rios
def registrar_usuario(email, senha):
    try:
        resposta = supabase.auth.sign_up({
            "email": email,
            "password": senha
        })
        if resposta.user:
            print("Usu√°rio registrado com sucesso!")
            return resposta.user.id  # Retorna o user_id
        else:
            print(f"Erro ao registrar usu√°rio: {resposta}")
            return None
    except Exception as e:
        print(f"Erro ao registrar usu√°rio: {e}")
        return None

# Fun√ß√£o para autenticar usu√°rios
def autenticar_usuario(email, senha):
    try:
        resposta = supabase.auth.sign_in_with_password({
            "email": email,
            "password": senha
        })
        if resposta.user:
            st.session_state.user_id = resposta.user.id  # Salva o user_id na sess√£o
            return resposta.user.id  # Retorna o user_id
        else:
            return None
    except Exception as e:
        print(f"Erro ao autenticar: {e}")
        return None

# Sistema de autentica√ß√£o
if not st.session_state.autenticado:
    menu_login = st.sidebar.radio("Autentica√ß√£o", ["Login", "Registrar"])

    if menu_login == "Registrar":
        st.subheader("Registrar")
        email = st.text_input("Email")
        senha = st.text_input("Senha", type="password")
        if st.button("Registrar"):
            if email and senha:
                user_id = registrar_usuario(email, senha)
                if user_id:
                    st.success("Usu√°rio registrado com sucesso!")
                    st.success("Por Favor confirme o seu email com o link recebido pelo mesmo.")
                else:
                    st.error("Erro ao registrar usu√°rio. Verifique as informa√ß√µes fornecidas.")
            else:
                st.error("Preencha todos os campos.")

    elif menu_login == "Login":
        st.subheader("Login")
        email = st.text_input("Email")
        senha = st.text_input("Senha", type="password")

        if st.button("Login"):
            user_id = autenticar_usuario(email, senha)
            if user_id:
                st.session_state.autenticado = True  # Atualiza o estado de autentica√ß√£o
                st.session_state.user_id = user_id  # Armazena o user_id na sess√£o
                st.success("Login realizado com sucesso!")
                st.rerun()
            else:
                st.error("Email ou senha inv√°lidos.")
else:
    # Exibir o menu principal ap√≥s o login
    if st.sidebar.button("Sair"):
        st.session_state.autenticado = False
        st.session_state.user_id = None
        st.rerun()

    user_id = st.session_state.user_id  # Recupera o user_id da sess√£o

    # Estado inicial do menu
    if "menu" not in st.session_state:
        st.session_state.menu = "Inicio"

    # Layout do menu principal
    st.title("ClientWise")
    st.markdown("### Escolha uma √°rea para gerenciar:")

    col1, col2, col3 = st.columns(3)

    with col1:
        if menu_button("Gerenciador de Vendas", "üìà", "vendas"):
            st.session_state.menu = "Gerenciador de Vendas"

    with col2:
        if menu_button("Gerenciador de Finan√ßas", "üí∞", "financas"):
            st.session_state.menu = "Gerenciador de Finan√ßas"

    with col3:
        if menu_button("Gerenciador de Investimentos", "üìä", "investimentos"):
            st.session_state.menu = "Gerenciador de Investimentos"

    # Divisor para separar o menu do conte√∫do
    st.divider()

    # Conte√∫do da p√°gina selecionada
    if st.session_state.menu == "Gerenciador de Vendas":
        st.subheader("Gerenciador de Vendas")
        renderizar_gerenciador_de_vendas(user_id)
    elif st.session_state.menu == "Gerenciador de Finan√ßas":
        st.subheader("Gerenciador de Finan√ßas")
        renderizar_gerenciamento_financeiro(user_id)
    elif st.session_state.menu == "Gerenciador de Investimentos":
        st.subheader("Gerenciador de Investimentos")
        renderizar_gerenciamento_de_investimento(user_id)
    else:
        st.markdown("Bem-vindo ao **ClientWise**! Selecione uma √°rea para come√ßar.")
